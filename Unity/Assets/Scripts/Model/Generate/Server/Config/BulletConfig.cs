
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;

namespace ET
{
    [EnableClass]
    public sealed partial class BulletConfig : BeanBase
    {
        public BulletConfig(ByteBuf _buf)
        {
            Id = _buf.ReadInt();
            Shape = _buf.ReadInt();
            {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ShapeParam = new string[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { string __e0;__e0 = _buf.ReadString(); ShapeParam[__index0] = __e0;}}
            TotalTime = _buf.ReadInt();
            {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);AwakeAction = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); AwakeAction[__index0] = __e0;}}
            Interval = _buf.ReadInt();
            {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);TickCastId = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); TickCastId[__index0] = __e0;}}
            {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);TickAction = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); TickAction[__index0] = __e0;}}
            {int __n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);DestroyAction = new int[__n0];for(var __index0 = 0 ; __index0 < __n0 ; __index0++) { int __e0;__e0 = _buf.ReadInt(); DestroyAction[__index0] = __e0;}}
            Model = _buf.ReadString();

            PostInit();
        }

        public static BulletConfig DeserializeBulletConfig(ByteBuf _buf)
        {
            return new BulletConfig(_buf);
        }

        /// <summary>
        /// Id
        /// </summary>
        public readonly int Id;

        /// <summary>
        /// 形状
        /// </summary>
        public readonly int Shape;

        /// <summary>
        /// 形状参数
        /// </summary>
        public readonly string[] ShapeParam;

        /// <summary>
        /// 持续时间
        /// </summary>
        public readonly int TotalTime;

        /// <summary>
        /// 创生时触发
        /// </summary>
        public readonly int[] AwakeAction;

        /// <summary>
        /// 结算间隔
        /// </summary>
        public readonly int Interval;

        /// <summary>
        /// 结算技能编号
        /// </summary>
        public readonly int[] TickCastId;

        /// <summary>
        /// 结算行为
        /// </summary>
        public readonly int[] TickAction;

        /// <summary>
        /// 销毁前触发
        /// </summary>
        public readonly int[] DestroyAction;

        /// <summary>
        /// 模型
        /// </summary>
        public readonly string Model;

        public const int __ID__ = 284876548;

        public override int GetTypeId() => __ID__;

        public override string ToString()
        {
            return "{ "
            + "Id:" + Id + ","
            + "Shape:" + Shape + ","
            + "ShapeParam:" + Luban.StringUtil.CollectionToString(ShapeParam) + ","
            + "TotalTime:" + TotalTime + ","
            + "AwakeAction:" + Luban.StringUtil.CollectionToString(AwakeAction) + ","
            + "Interval:" + Interval + ","
            + "TickCastId:" + Luban.StringUtil.CollectionToString(TickCastId) + ","
            + "TickAction:" + Luban.StringUtil.CollectionToString(TickAction) + ","
            + "DestroyAction:" + Luban.StringUtil.CollectionToString(DestroyAction) + ","
            + "Model:" + Model + ","
            + "}";
        }

        partial void PostInit();
    }
}
