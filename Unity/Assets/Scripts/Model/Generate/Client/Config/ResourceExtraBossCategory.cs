//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;

namespace ET
{
   
[Config]
public partial class ResourceExtraBossCategory: Singleton<ResourceExtraBossCategory>,IMerge
{
    private Dictionary<int, ResourceExtraBossConfig> _dataMap;
    private List<ResourceExtraBossConfig> _dataList;

    public ResourceExtraBossCategory(ByteBuf _buf)
    {
        _dataMap = new Dictionary<int, ResourceExtraBossConfig>();
        _dataList = new List<ResourceExtraBossConfig>();
        
        for(int n = _buf.ReadSize() ; n > 0 ; --n)
        {
            ResourceExtraBossConfig _v;
            _v = ResourceExtraBossConfig.DeserializeResourceExtraBossConfig(_buf);
            _dataList.Add(_v);
            _dataMap.Add(_v.Id, _v);
        }
    }
    
    public bool Contain(int id)
    {
        return _dataMap.ContainsKey(id);
    }

    public Dictionary<int, ResourceExtraBossConfig> GetAll()
    {
        return _dataMap;
    }
    
    public List<ResourceExtraBossConfig> DataList => _dataList;

    public void Merge(object o)
    {
        ResourceExtraBossCategory s = o as ResourceExtraBossCategory;
        foreach (var kv in s._dataMap)
        {
            this._dataMap.Add(kv.Key, kv.Value);
        }
    }

    public ResourceExtraBossConfig GetOrDefault(int key) => _dataMap.TryGetValue(key, out var v) ? v : null;
    public ResourceExtraBossConfig Get(int key) => _dataMap[key];
    public ResourceExtraBossConfig this[int key] => _dataMap[key];

    
    public string ConfigName()
    {
        return typeof(ResourceExtraBossConfig).Name;
    }
}
}