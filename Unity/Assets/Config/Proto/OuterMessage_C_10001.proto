syntax = "proto3";
package ET;

message HttpGetRouterResponse
{
	repeated string Realms = 1;
	repeated string Routers = 2;
}

message RouterSync
{
	uint32 ConnectId = 1;
	string Address = 2;
}

// ResponseType G2C_EnterMap
message C2G_EnterMap // ISessionRequest
{
	int32 RpcId = 1;
	int32 UnitConfigId = 2;
}

message G2C_EnterMap // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	/// 自己的UnitId
	int64 MyId = 4;
}

message MoveInfo
{
	repeated Unity.Mathematics.float3 Points = 1;
	Unity.Mathematics.quaternion Rotation = 2;
	int32 TurnSpeed = 3;
}

message UnitInfo
{
	int64 UnitId = 1;
	int32 ConfigId = 2;
	int32 Type = 3;
	Unity.Mathematics.float3 Position = 4;
	Unity.Mathematics.float3 Forward = 5;
	map<int32, int64> KV = 6;
	MoveInfo MoveInfo = 7;
}

message M2C_CreateUnits // IMessage
{
	repeated UnitInfo Units = 1;
}

message M2C_CreateMyUnit // IMessage
{
	UnitInfo Unit = 1;
}

message M2C_StartSceneChange // IMessage
{
	int64 SceneInstanceId = 1;
	string SceneName = 2;
	int32 MapConfigId = 3;
}

message M2C_RemoveUnits // IMessage
{
	repeated int64 Units = 1;
}

message C2M_PathfindingResult // ILocationMessage
{
	int32 RpcId = 1;
	Unity.Mathematics.float3 Position = 2;
}

message C2M_Stop // ILocationMessage
{
	int32 RpcId = 1;
}

message M2C_PathfindingResult // IMessage
{
	int64 Id = 1;
	Unity.Mathematics.float3 Position = 2;
	repeated Unity.Mathematics.float3 Points = 3;
}

message M2C_Stop // IMessage
{
	int32 Error = 1;
	int64 Id = 2;
	Unity.Mathematics.float3 Position = 3;
	Unity.Mathematics.quaternion Rotation = 4;
}

// ResponseType G2C_Ping
message C2G_Ping // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Ping // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 Time = 4;
}

// ResponseType M2C_Reload
message C2M_Reload // ISessionRequest
{
	int32 RpcId = 1;
	string Account = 2;
	string Password = 3;
}

message M2C_Reload // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType R2C_LoginAccount
message C2R_LoginAccount // ISessionRequest
{
	int32 RpcId = 1;
	string  Account = 2;  // 帐号
	string  Password = 3;  // 密码
}

message R2C_LoginAccount // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string Token = 4;
}

// ResponseType G2C_LoginGate
message C2G_LoginGate // ISessionRequest
{
	int32 RpcId = 1;
	string Token = 2;
	string AccountName = 3;
	int64 Key = 4;
}

message G2C_LoginGate // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 PlayerId = 4;
	string NickName = 5;
}

// ResponseType M2C_TransferMap
message C2M_TransferMap // ILocationRequest
{
	int32 RpcId = 1;
	int32 MapConfigId = 2;
}

message M2C_TransferMap // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType G2C_Benchmark
message C2G_Benchmark // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Benchmark // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType M2C_ChooseModelDifficulty
message C2M_ChooseModelDifficulty // ILocationRequest
{
	int32 RpcId = 1;
	int32 ModelId = 2;
	int32 DifficultyId = 3;
}

message M2C_ChooseModelDifficulty // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

message ServerInfoProto
{
	int32 Id = 1;
	int32 Status = 2;
	string ServerName = 3;
}

// ResponseType R2C_GetServerList
message C2R_GetServerList // ISessionRequest
{
	int32 RpcId = 1;
	string Account = 2;
	string Token = 3;
}

message R2C_GetServerList // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;

	repeated ServerInfoProto ServerInfoList = 4;
}

message RolesInfoProto
{
	int32 UnitConfigId = 1;
	int32 Proficiency = 2;
	int32 Level = 3;
	int32 IsUnlock = 4;
}

// ResponseType R2C_GetRolesList
message C2R_GetRolesList // ISessionRequest
{
	int32 RpcId = 1;
	string Account = 2;
	string Token = 3;
}

message R2C_GetRolesList // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;

	repeated RolesInfoProto RolesInfosList = 4;
}

// ResponseType G2C_ChangeNickName
message C2G_ChangeNickName // ISessionRequest
{
	int32 RpcId = 1;
	string Account = 2;
	string NewNickName = 3;
}

message G2C_ChangeNickName // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

message A2C_Disconnect // ISessionMessage
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType R2C_LoginGame
message C2R_LoginGame // ISessionRequest
{
	int32 RpcId = 1;
	string Token = 2;
	string Account = 3;
	int64 Id = 4;
}

message R2C_LoginGame // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 PlayerId = 4;
	string NickName = 5;
}

// ResponseType R2C_GetRealmKey
message C2R_GetRealmKey // ISessionRequest
{
	int32 RpcId = 1;
	string Token = 2;
	string Account = 3;
	int32 ServerId = 4;
}

message R2C_GetRealmKey // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string Address = 4;
	int64 Key = 5;
	int64 GateId = 6;
}

// ResponseType G2C_EnterGame
message C2G_EnterGame // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_EnterGame // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 MyUnitId = 4;
}

//Cast开始
message M2C_CastStart // IMessage
{
	int32 SceneId = 1;

	int64 CastId = 2;
	int64 CastConfigId = 3;
	int64 CasterId = 4;
	repeated int64 TargetsId = 5;
}

//Cast命中
message M2C_CastHit // IMessage
{
	int64 SceneId = 1;
	int64 CastId = 2;
	repeated int64 TargetsId = 3;
	int64 CasterId = 4;
}

//Cast结束
message M2C_CastFinish // IMessage
{
	int64 SceneId = 1;
	int64 CastId = 2;
	int64 CasterId = 3;
}

//Cast打断
message M2C_CastBreak // IMessage
{
	int64 SceneId = 1;
	int64 CastId = 2;
	int64 CasterId = 3;
}

message BuffProto
{
	int64 Id = 1;
	int32 ConfigId = 2;
	int64 ExpireTime = 3;
	int64 CreateTime = 4;
	bytes ExtraData = 5;
}

message M2C_BuffAdd // IMessage
{
		int64 UnitId = 1;
		BuffProto BuffData = 2;
}

message M2C_BuffTick // IMessage
{
	int64 UnitId = 1;
	int64 BuffId = 2;
}

message M2C_BuffUpdate // IMessage
{
	int64 UnitId = 1;
	BuffProto BuffData = 2;
}

message M2C_BuffRemove // IMessage
{
	int64 UnitId = 1;
	int64 BuffId = 2;
}

message M2C_BattleResult // IMessage
{
	int64 AttackerId = 1;
	int64 TargetId = 2;
	int64 Damage = 3;
}

// ResponseType M2C_TestCast
message C2M_TestCast // ILocationRequest
{
	int32 RpcId = 1;
	int32 CastConfigId = 2;
}

message M2C_TestCast // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

message M2C_CoolDownChange // IMessage
{
	repeated int32 CastConfigIds = 1;
	repeated int64 CoolDownTimes = 2;
	repeated int64 CoolDownStartTime = 3;
}